plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'cn.gov.xivpn2'
    compileSdk 35

    defaultConfig {
        applicationId "io.github.exclude0122.xivpn"
        minSdk 28
        targetSdk 35
        versionCode 12
        versionName "1.0.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    signingConfigs {
        githubaction {
            storeFile file("../sign/keystore.jks")
            storePassword System.getenv("RELEASE_KEYSTORE_PASSWORD")
            keyAlias System.getenv("RELEASE_KEYSTORE_ALIAS")
            keyPassword System.getenv("RELEASE_KEY_PASSWORD")
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
    }

    buildFeatures {
        buildConfig true
    }

    flavorDimensions += "version"
    productFlavors {
        universal {
            signingConfig signingConfigs.githubaction
            ndk {
                abiFilters "arm64-v8a", "x86_64"
            }
            versionCode = defaultConfig.versionCode * 10 + 1
        }

        x86_64 {
            signingConfig signingConfigs.githubaction
            ndk {
                abiFilters "x86_64"
            }
            versionCode = defaultConfig.versionCode * 10 + 2
        }

        arm64_v8a {
            signingConfig signingConfigs.githubaction
            ndk {
                abiFilters "arm64-v8a"
            }
            versionCode = defaultConfig.versionCode * 10 + 3
        }


    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {
    implementation libs.room.runtime
    annotationProcessor libs.room.compiler
    implementation libs.google.guava
    implementation libs.gson
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation libs.work.runtime
    implementation libs.okhttp
    implementation libs.preference

}

ext.abiCodes = ["x86_64": 1, "arm64-v8a": 3]
import com.android.build.OutputFile
android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def abiVersionCode = project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
        if (abiVersionCode != null) {
            output.versionCodeOverride = variant.versionCode * 10 + abiVersionCode
        }
    }
}